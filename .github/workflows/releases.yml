name: Release

on:
  workflow_dispatch:
    inputs:
      release-type:
        description: "Select version bump"
        required: true
        type: choice
        options: [patch, minor, major]
        default: minor

permissions:
  contents: write
  packages: write

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: false

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  prepare-release:
    runs-on: ubuntu-latest
    outputs:
      new-tag: ${{ steps.bump-version.outputs.new-tag }}
      new-version: ${{ steps.bump-version.outputs.new-version }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Ensure we are on main
        run: |
          b=$(git rev-parse --abbrev-ref HEAD)
          if [ "$b" != "main" ]; then
            echo "❌ Releases must be created from main. Current: $b"
            exit 1
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Bump version in package.json
        id: bump-version
        run: |
          npm version ${{ inputs.release-type }} --no-git-tag-version
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "new-version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "new-tag=v$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Lint
        run: npm run lint

      - name: Test
        run: npm test

      - name: Generate changelog
        run: npm run changelog

      - name: Upload release manifest
        uses: actions/upload-artifact@v4
        with:
          name: release-files
          path: |
            package.json
            package-lock.json
            CHANGELOG.md

  build-and-push-image:
    needs: prepare-release
    runs-on: ubuntu-latest
    env:
      RELEASE_TAG: ${{ needs.prepare-release.outputs.new-tag }}
    steps:
      - uses: actions/checkout@v4

      - name: Download release manifest
        uses: actions/download-artifact@v4
        with:
          name: release-files

      - name: Apply release manifest
        run: |
          cp release-files/package.json .
          cp release-files/package-lock.json .
          cp release-files/CHANGELOG.md .

      - uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ env.RELEASE_TAG }}

      - name: Build & push image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  finalize-release:
    needs:
      - prepare-release
      - build-and-push-image
    runs-on: ubuntu-latest
    env:
      RELEASE_TAG: ${{ needs.prepare-release.outputs.new-tag }}
      RELEASE_VERSION: ${{ needs.prepare-release.outputs.new-version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Ensure tag does not exist
        run: |
          if git rev-parse "$RELEASE_TAG" >/dev/null 2>&1; then
            echo "Tag $RELEASE_TAG already exists. Aborting release."
            exit 1
          fi

      - name: Download release manifest
        uses: actions/download-artifact@v4
        with:
          name: release-files

      - name: Apply release manifest
        run: |
          cp release-files/package.json .
          cp release-files/package-lock.json .
          cp release-files/CHANGELOG.md .

      - name: Configure git
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      - name: Commit version bump
        run: |
          if git diff --quiet; then
            echo "No changes to commit; aborting."
            exit 1
          fi
          git add package.json package-lock.json CHANGELOG.md
          git commit -m "chore(release): v$RELEASE_VERSION"

      - name: Push changes
        run: git push origin HEAD

      - name: Create and push tag
        run: |
          git tag "$RELEASE_TAG"
          git push origin "$RELEASE_TAG"

      - name: Login GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Promote image to latest
        run: |
          docker pull "$REGISTRY/${{ env.IMAGE_NAME }}:$RELEASE_TAG"
          docker tag  "$REGISTRY/${{ env.IMAGE_NAME }}:$RELEASE_TAG" "$REGISTRY/${{ env.IMAGE_NAME }}:latest"
          docker push "$REGISTRY/${{ env.IMAGE_NAME }}:latest"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          generate_release_notes: true
